input {
	jdbc {
		jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.23.jar"
	    jdbc_driver_class => "org.postgresql.Driver"
	    jdbc_connection_string => "jdbc:postgresql://my-postgres:5432/postgres"
	    jdbc_user => "root"
	    jdbc_password => "Betacom2021"
	    jdbc_paging_enabled => true
	    last_run_metadata_path => "/usr/share/logstash/persistence/.input_jdbc_last_run"
	    tracking_column => "unix_ts_in_secs"
	    use_column_value => true
	    tracking_column_type => "numeric"
	    schedule => "*/5 * * * * *"
	    statement => "SELECT *, extract(epoch from modified_at) AS unix_ts_in_secs FROM public.outbox_test WHERE (extract(epoch from modified_at) > :sql_last_value AND modified_at < NOW()) ORDER BY modified_at ASC"
	    target => "values"
	}
}
filter {
	json_encode {
		source => "values"
		target => "message"
	}
	json_encode {
		source => "message"
	}
	clone {
		clones => ["elastic"]
	}
	if [type] == "elastic" {
		ruby {
	        code => '
	            event.get("values").each { |k, v|
	                event.set(k,v)
	            }
	            event.remove("values")
	            event.remove("type")
	            event.remove("message")
	        '
	    }
	}
}
output {
	stdout { 
		codec =>  "rubydebug"
	}
	if "" in [event_type] {
		elasticsearch {
			hosts => "elasticsearch"
			index => "%{[event_type]}"
		}
	} else {
		exec {
			command => "echo 'XADD topic:%{[values][event_type]} * body %{[message]}' | redis-cli -h my-redis"
		}
	}
}